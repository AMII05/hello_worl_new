name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
    
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: amitabiswas05/argo_cicd
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          registry: amitabiswas05/argo_cicd
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Login to GCR
        env:
          PROJECT_ID: anthos-poc-368601 #create env called PROJECT_ID consisted of our actual GCP Project ID
        uses: google-github-actions/setup-gcloud@v0.3.0 #checkouts GCR repo, so this workflow can access it
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} #parse the value of repository secret called SERVICE_ACCOUNT_KEY that we have created earlier
          project_id: ${{ env.PROJECT_ID }} #parse the value of env called PROJECT_ID
          export_default_credentials: true
          
      - name: Build Docker Image
        env:
          IMAGE_NAME: bank-of-anthos #create env called IMAGE_NAME consisted of actual name of Docker Image after we build
          PROJECT_ID: anthos-poc-368601
        run: docker build -t $IMAGE_NAME:latest . #build the docker image
        
      - name: Configure Docker Client
        run:  |-
          gcloud auth configure-docker --quiet #authenticate to gcr
        
      - name: Push Docker Image to Container Registry GCR
        env: 
          IMAGE_NAME: bank-of-anthos
          PROJECT_ID: anthos-poc-368601
        #tag docker image to gcr image format then push to gcr
        run: |-
          gcloud auth configure-docker -q
          docker tag $IMAGE_NAME:latest australia-southeast1-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME:latest 
          docker push australia-southeast1-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME:latest
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
